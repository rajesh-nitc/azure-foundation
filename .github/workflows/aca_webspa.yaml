# https://learn.microsoft.com/en-us/azure/container-instances/container-instances-github-action?tabs=openid

name: Deploy aca webspa
on: 
  push:
    branches:
     - main
  pull_request:
    branches:
     - main
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
      pull-requests: write

env:
  IMAGE_NAME: hello-world
  CONTAINER_NAME: hello-world
  CONTAINER_APP_NAME: ca-bu1-app1-web-westus
  CONTAINER_APP_ENVIRONMENT: cae-bu1-app1-westus
  LOCATION: westus
    
jobs:
  build_and_deploy_dev:
    # if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: 06-aca-app/webspa
    name: Build and Deploy Dev
    environment: dev
    env:
      DEPLOYMENT_ENV: dev
      WEBSPA_CICD_CLIENT_ID: ${{ secrets.WEBSPA_CICD_CLIENT_ID }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      REGISTRY_LOGIN_SERVER: ${{ secrets.WEBSPA_CICD_ACR_NAME }}.azurecr.io
      RG: ${{ secrets.WEBSPA_CICD_RG_NAME }}
      CONTAINER_UAI_ID: ${{ secrets.WEBSPA_CICD_CONTAINER_UAI_ID }}
      WEBSPA_AAD_CLIENT_ID: ${{ secrets.WEBSPA_CICD_AAD_CLIENT_ID }}
      WEBSPA_AAD_SECRET: ${{ secrets.WEBSPA_CICD_AAD_SECRET }}
       
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    - name: Get Short SHA
      id: get_short_sha
      run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "::set-output name=short_sha::$SHORT_SHA"

    - name: Set Azure CLI to dynamically install missing extensions
      shell: bash
      run: az config set extension.use_dynamic_install=yes_without_prompt 

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        client-id: ${{ env.WEBSPA_CICD_CLIENT_ID }}
        tenant-id: ${{ env.TENANT_ID }}
        subscription-id: ${{ env.SUBSCRIPTION_ID }}

    - name: Build and push image
      id: build-image
      env:
        SHORT_SHA: ${{ steps.get_short_sha.outputs.short_sha }}
      run: |
          echo "short sha: $SHORT_SHA"
          #az acr build --image $REGISTRY_LOGIN_SERVER/$IMAGE_NAME:$SHORT_SHA --registry $REGISTRY_LOGIN_SERVER --file "Dockerfile" .

    - name: Check if Azure Container App exists
      id: check-app
      run: |
          echo "deployment env: $DEPLOYMENT_ENV"
          az containerapp show --resource-group $RG --name $CONTAINER_APP_NAME-$DEPLOYMENT_ENV || echo "::set-output name=exists::false"

    - name: Pull image - Create Azure Container App
      if: steps.check-app.outputs.exists == 'false'
      env:
        SHORT_SHA: ${{ steps.get_short_sha.outputs.short_sha }}
      run: |
          echo "app exists: ${{ steps.check-app.outputs.exists }}"
          # az containerapp create --name $CONTAINER_APP_NAME-$DEPLOYMENT_ENV --resource-group $RG --location $LOCATION \
          # --container-name $CONTAINER_NAME-$DEPLOYMENT_ENV \ 
          # --environment $CONTAINER_APP_ENVIRONMENT-$DEPLOYMENT_ENV \
          # --cpu 0.25 --memory 0.5Gi --min-replicas 1 --max-replicas 2 \
          # --image $REGISTRY_LOGIN_SERVER/$IMAGE_NAME:$SHORT_SHA \
          # --ingress external \
          # --target-port 3000 \
          # --user-assigned $CONTAINER_UAI_ID \
          # --env-vars API_URL="http://ca-bu1-app1-api-westus-$DEPLOYMENT_ENV"
    
    - name: Pull image - Update Azure Container App
      if: steps.check-app.outputs.exists != 'false'
      env:
        SHORT_SHA: ${{ steps.get_short_sha.outputs.short_sha }}
      run: |
          az containerapp update --name $CONTAINER_APP_NAME-$DEPLOYMENT_ENV --resource-group $RG --location $LOCATION \
          --image $REGISTRY_LOGIN_SERVER/$IMAGE_NAME:$SHORT_SHA

    # - name: Update identity provider
    #   if: steps.check-app.outputs.exists == 'false'
    #   run: |
    #       az containerapp auth microsoft update --name $CONTAINER_APP_NAME-$DEPLOYMENT_ENV --resource-group $RG \
    #       --client-id $WEBSPA_AAD_CLIENT_ID \
    #       --client-secret-name $WEBSPA_AAD_SECRET \
    #       --issuer "https://login.microsoftonline.com/$TENANT_ID/v2.0"