# https://learn.microsoft.com/en-us/azure/container-instances/container-instances-github-action?tabs=openid

name: Deploy aca app
on: 
  push:
    branches:
     - main
  pull_request:
    branches:
     - main
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
      pull-requests: write

env:
  IMAGE_NAME: hello-world
  CONTAINER_NAME: hello-world
  CONTAINER_APP_NAME: ca-bu1-app1-westus
  CONTAINER_APP_ENVIRONMENT: cae-bu1-app1-westus
  LOCATION: westus
    
jobs:
  build_and_deploy_pr:
    # if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: 06-aca-app/src
    name: Build and Deploy PR
    environment: dev
    env:
      WEB_E_AUTH_CICD_CLIENT_ID: ${{ secrets.WEB_E_AUTH_CICD_CLIENT_ID }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      REGISTRY_LOGIN_SERVER: ${{ secrets.WEB_E_AUTH_CICD_ACR_NAME }}.azurecr.io
      RG: ${{ secrets.WEB_E_AUTH_CICD_RG_NAME }}
      CONTAINER_UAI_ID: ${{ secrets.WEB_E_AUTH_CONTAINER_UAI_ID }}
      WEB_E_AUTH_AAD_CLIENT_ID: ${{ secrets.WEB_E_AUTH_AAD_CLIENT_ID }}
      WEB_E_AUTH_AAD_SECRET: ${{ secrets.WEB_E_AUTH_AAD_SECRET }}
        
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    - name: Get Short SHA
      id: get_short_sha
      run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "short_sha=$SHORT_SHA" >> "$GITHUB_OUTPUT" 

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        client-id: ${{ env.WEB_E_AUTH_CICD_CLIENT_ID }}
        tenant-id: ${{ env.TENANT_ID }}
        subscription-id: ${{ env.SUBSCRIPTION_ID }}

    - name: Build and push image
      id: build-image
      env:
        SHORT_SHA: ${{ steps.get_short_sha.outputs.short_sha }}
      run: |
          #az acr build --image $REGISTRY_LOGIN_SERVER/$IMAGE_NAME:$SHORT_SHA --registry $REGISTRY_LOGIN_SERVER --file "Dockerfile" .

    # - name: Pull image
    #   id: get_fqdn
    #   env:
    #     SHORT_SHA: ${{ steps.get_short_sha.outputs.short_sha }}
    #   run: |
    #       app_fqdn=$(az containerapp create --name ${CONTAINER_APP_NAME}-pr --resource-group $RG --location $LOCATION \
    #       --container-name ${CONTAINER_NAME}-pr \ 
    #       --environment ${CONTAINER_APP_ENVIRONMENT}-dev \
    #       --cpu 0.25 --memory 0.5Gi --min-replicas 1 --max-replicas 2 \
    #       --image $REGISTRY_LOGIN_SERVER/$IMAGE_NAME:$SHORT_SHA \
    #       --ingress external \
    #       --target-port 3500 \
    #       --user-assigned $CONTAINER_UAI_ID \
    #       --query properties.configuration.ingress.fqdn \
    #       --output tsv)
    #       echo "fqdn=$app_fqdn" >> "$GITHUB_OUTPUT"

    # - name: Update identity provider
    #   run: |
    #       az containerapp auth microsoft update --name ${CONTAINER_APP_NAME}-pr --resource-group $RG \
    #       --client-id $WEB_E_AUTH_AAD_CLIENT_ID \
    #       --client-secret-name $WEB_E_AUTH_AAD_SECRET \
    #       --issuer "https://login.microsoftonline.com/$TENANT_ID/v2.0"
    #       --allowed-audiences "api://bu1-app1-web-e-auth-dev"

    # - name: Update redirect_uri in azure ad app registration
    #   env:
    #     REDIRECT_URI: "https://${{ steps.get_fqdn.outputs.fqdn }}/.auth/login/aad/callback"
    #   run: |
    #       GET_REDIRECT_URI=$(az ad app show --id $WEB_E_AUTH_AAD_CLIENT_ID --query "web.redirectUris[0]" --output tsv)
    #       if [[ $GET_REDIRECT_URI != $REDIRECT_URI ]];then
    #         az ad app update --id $WEB_E_AUTH_AAD_CLIENT_ID --web-redirect-uris $REDIRECT_URI
    #       fi