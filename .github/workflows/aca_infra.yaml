# https://learn.microsoft.com/en-us/samples/azure-samples/github-terraform-oidc-ci-cd/github-terraform-oidc-ci-cd/

name: Deploy aca infra
on:
  push:
    branches:
     - main
  pull_request:
    branches:
     - main
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
      pull-requests: write

jobs:
  aca_infra_plan:
    # if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: 05-aca-infra/envs/dev
    name: Analyse the Terraform
    environment: dev
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: "${{ secrets.INFRA_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.TENANT_ID }}"
      GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.5.0

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Terraform Fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: terraform init

    - name: Print Environment Variables
      run: |
          echo "Printing environment variables"
          env

    - name: Terraform Plan
      id: plan
      run: terraform plan

  aca_infra_apply:
    # if: github.event_name != 'pull_request' && contains(toJson(github.event.commits), 'Initial commit') == false
    defaults:
      run:
        working-directory: 05-aca-infra/envs/dev

    name: Deploy to Dev
    environment: dev
    runs-on: ubuntu-latest
    needs: aca_infra_analysis
    env:
      ARM_CLIENT_ID: "${{ secrets.INFRA_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.TENANT_ID }}"
      GITHUB_TOKEN: "${{ secrets.GH_TOKEN }}"

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.5.0

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Terraform Init
      run: terraform init

    # - name: Terraform Apply
    #   run: terraform apply -auto-approve